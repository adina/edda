-----------------
breseq test drive
-----------------

:Author: Jeff Barrick
:Date: June 8, 2010

You'll need to install breseq first -- see :doc:`breseq-install`.

In this first tutorial we will just run _breseq_ on a tiny piece of a
genome and some simulated data to get an idea for the steps it goes
through, what the output looks like, and how to interpret the results
for different kinds of mutations. ::

   %% cd /mnt/breseq_tutorial/01_test_drive
   %% breseq -r REL606.20kb_fragment.gbk -o breseq test.fastq

What's going on? The -r argument tells _breseq_ what reference
sequences to match against.  The reference sequence is in GenBank
format, which includes annotation of where genes are.  The -o argument
tells _breseq_ to put all of its data in the "breseq" directory,
relative to the current directory.

_breseq_ is a pipeline that has several steps. 

Any line that is preceded by [system] is actually a command that is
sent to the shell (same as when you type it in).  You might recognize
that _breseq_ is using SAMTools and invoking R at several points.  If
_breseq_ is interrupted in the middle of processing, it saves
checkpoint files and begins as close as it can to where it left
off. This is a common strategy in @@

Now copy one the entire "output" directory that breseq creates within
the "breseq" directory back to your computer. After copying it back to
your computer, open "index.html" in a web browser.  It contains tables
describing your input reference sequences and fastq files at the
top. Next is a table of predicted mutations, then there are tables
that have evidence of changes in the genome that was rejected for some
reason or that the program was unable to predict a corresponding
mutation.

Click around and ask question about what the different results mean.

Before we move on, look at the GenomeDiff (.gd) files in the
breseq/output directory. ::

  %% less breseq/output/unnamed.gd

(or open the copy in the directory that you downloaded)

The file is called "unnamed" because we didn't name our data set. The
format is similar to the text version of SAM files. Lines with two
letter codes are evidence. Lines with three letter codes are predicted
mutations.  There are several tab-delimited columns in these files
(the number depends on what the line describes) and then a key=value
pairs that provide accessory information.

Questions: 

1. Why is the 1-nt deletion at position 9,875 supported by "RA"
evidence, but the 4-nt deletion at position 5,609 is supported by "JC"
and "MC" evidence?

2. Can you guess what is going on with the two entries in "Unassigned
new junction evidence..."? Click on the "*" links so that you can see
what pieces of the genome are adjacent to each other. Hint: For one of
them it's very useful to click on the "coverage" link in the reference
sequence table at the top.

3. What's wrong with the prediction of a 5-nt deletion at position
12,281?

The simulated data was generated by applying a GenomeDiff file to the
reference sequence, so you can actually see all of the mutations that
were present and compare them to the ones that the program found by
using this command::

   %% less answers/mutations.gd

To orient you, here is more information on what is in a .gd file:

Formats for Mutation Lines in a GenomeDiff File
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

The first line of a GenomeDiff file must be "#=GENOME_DIFF 1.0"! All
other lines conform to specifications like these:

Single nucleotide polymorphism...
SNP<TAB>id<TAB>parent_id<TAB>seq_id<TAB>position<TAB>ref_seq<TAB>new_seq

Insertion...
INS<TAB>id<TAB>parent_id<TAB>seq_id<TAB>position<TAB>new_seq

Deletion...
DEL<TAB>id<TAB>parent_id<TAB>seq_id<TAB>position<TAB>size

Block substitution...
SUB<TAB>id<TAB>parent_id<TAB>seq_id<TAB>position<TAB>ref_seq<TAB>new_seq

Duplication...
DUP<TAB>id<TAB>parent_id<TAB>seq_id<TAB>position<TAB>size

Insertion of a new copy of a mobile genome element...
MOB<TAB>id<TAB>parent_id<TAB>seq_id<TAB>position<TAB>element_name<TAB>strand<TAB>duplication_size<TAB>gap_left<TAB>gap_right

The ids and parent ids are used to assign evidence to mutations. Since
this file was created with arbitrary mutations, placeholder "."
characters were left to mark those positions.

Questions:

4. Why is the 1-nt deletion applied at position 9,871 in mutations.gd
showing up as position 9,875 in the results?

5. Can you find any other discrepancies between mutations.gd and the
results and figure out what's going on?

Answers:

You can look at the answers in the file answers/input.gd, though you
will need to read into the next section to understand what was going
on.

Tutorial 2: :doc:`breseq-mutate`
