=================================
Checking read quality with FastQC
=================================

When you get your sequences back from a sequencing facility, it's important to check that they are high quality (garbage in, garbage out). In this tutorial, we'll use software called FastQC which checks whether a set of sequence reads in a .fastq file exhibit any unusual qualities (which might indicate either low sequence quality, or interesting biological features in your sample).

Running FastQC
--------------

First, set up an EC2 server and mount the EBS volume that you created from our snapshot.

The dataset we want for this tutorial is in /data/fastqc/::

  %% cd /data/fastqc/

Next, download and set up FastQC::

  %% curl -O http://www.bioinformatics.bbsrc.ac.uk/projects/fastqc/fastqc_v0.9.2.zip
  %% unzip fastqc_v0.9.2.zip
  %% cd FastQC
  %% chmod +x fastqc
  %% cd ..

Running FastQC is pretty simple. It is written in Java, but our machine should already have Java run-times installed::
  %% ./FastQC/fastqc fastq_data.fastq

Inspecting the output
---------------------

That's it! FastQC generates its output as an HTML file and associated image files in a fully self-contained subdirectory. To view it, copy the subdirectory to your local machine and view it in a web browser. You can do this with scp (run the following code on your local machine, not your EC2 terminal window)::

  %% scp -r -i <YOUR_KEYFILE.pem> root@<YOUR_AMAZON_MACHINE>:/fastqc/<SUBFOLDER> .

An easier alternative: you can mount your Dropbox folder on your Amazon instance, copy the output folders there (using the cp command), and then easily view it on your local machine.

Your output should look like this:

.. image:: images/fastqc_basicstats.png

The basic statistics look ok! Per-base sequence quality, on the other hand...:

.. image:: images/fastqc_perbaseseqqual.png

Not so good. It looks like the base calls after about 50 or so bases aren't very good. We could write a script that will chop those off from the fastq file if we wanted to get rid of them.

Another potential problem area is the per-sequence GC content:

.. image:: images/fastqc_perseqgc.png

This should look like a nice smooth distribution, but the presence of a spike around 40% indicates that sequences with 40% GC-content are over-represented in our sample. Let's move on for now...

There's also a warning about over-represented sequences:

.. image:: images/fastqc_overrepresentedseq.png

If we look at the sequences that are over-represented in our sample, they seem to consist of repeated runs of "AGAGA" -- which has 40% GC-content. That probably explains the peak we saw above!

Last, there is another warning for Kmer content. This is basically telling us almost the same thing as the over-represented sequences; these 5-bp sequences are over-represented in our dataset (and some of them are even over-represented at certain positions within reads).

Don't forget -- FastQC can tell us that the sequences in the .fastq file have these unusual features, but it can't necessarily explain why; the causes are open to interpretation. It could be due to poor sequencing quality or bad base calling, or maybe we accidentally contaminated our sequencing library with PCR-amplified microsatellite sequences, or maybe our study species just has a lot of repetitive sequences in its genome.

If you want more information on what each piece of FastQC's output means, the documentation is available online at http://www.bioinformatics.bbsrc.ac.uk/projects/fastqc/Help/